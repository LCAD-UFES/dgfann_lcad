To start the process, you have to:

    1. Create the datasets and the GA individual's evaluator:

        make

    2. After, you have to configure it.

    2.1. If you will use more than one machine to run the GA:

        2.2.1. Copy this folder (after run 'make') to each node that you will use.

        2.2.2. In each node, execute: './dgfann_node.py' or 'python dgfann_node.py'

        2.2.3. Open the file 'config.py' in master node, and set a array with the IP nodes:

           Ex.: nodes = [ 'IP_NODE-02', 'IP_NODE-03', ... ] 

        2.2.4. Inside RNAGenetico.py, certify that 'distribuido=True' is setted in line 32

    2.2. If you will use only this machine to run GA:

        2.2.1. Inside RNAGenetico.py, certify that the option is 'distribuido=False' instead of 'distribuido=True'

    3. Now, you can run GA in master node with the command:

        ./RNAGenetico.py

    4. When finished, you have to do this to distributed run:

        4.1. Copy the dgfann folder from all nodes to master. Put all these folders in dgfann parent folder.

            Ex.: parent_folder/

                    01-dgfann

                    02-dgfann

                    ...

                    nn-dgfann

    5. Now, you can separe the Neural Networks created by the last population with the command:

        ./utils/01-copiar_redes.sh

        Run it inside the master dgfann node, because it uses the file 'Resultado_Alg-Genetico.txt'
        
        to found the Neural Networks.

    6. After, you can built the plots with:

        ./utils/02-gen_plots.sh

        They will be placed in 'results_plots' folder


IMPORTANT:

      You have to install FANN library to run the code.
         - In Debian based system (like Ubuntu): apt-get install libfann-dev
         
      You have to install jsonrpclib python package to run distributed mode.
         - In Debian based system (like Ubuntu): apt-get install python-jsonrpclib
